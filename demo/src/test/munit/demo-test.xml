<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
	<munit:config name="new-test-suite.xml" />
	<munit:test name="new-test-suite-allteamsTest" doc:id="e130fd97-af4c-4bdb-8a86-0312a5a042fe" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="GET/ allteams" doc:id="41bc1478-c2d2-41d5-9885-75eb5798acc5" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="GET /allteams" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsStream('mock/allteams.json')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to allteams" doc:id="65e7b0a4-d66e-4c03-9575-0415d4707909" name="allteams"/>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="allTeamsTestResult var" doc:id="483fe078-3af8-412d-9c87-89346a22fccc" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="allTeamsTestResult" ><![CDATA[%dw 2.0
output application/json 
---
readUrl("classpath://results/allteamtest.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="Assert that" doc:id="4d116ab0-398b-44a8-952c-64723bc70fcc" is="#[MunitTools::equalTo(vars.allTeamsTestResult)]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="new-test-suite-allgamesTest" doc:id="9bd2a1b1-7cdb-497f-972f-f348b6d80786" description="Test">
		<munit:behavior >
			<ee:transform doc:name="gamesTest var" doc:id="b2a273c6-dc91-4c9e-9a9f-8b6d41d75677" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="gamesTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/games.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="GET /allgames first page" doc:id="58605bca-07d2-488d-ba14-8169e950e42f" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="GET /allgames first page" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.gamesTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<ee:transform doc:name="gamesTestSecond var" doc:id="3ebb3376-40be-48db-a57f-eda7496ba087" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="gamesTestSecond" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/gamessecond.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="GET /allgames from one page" doc:id="d2e9edcc-3923-4eab-9dca-509f2f5477d9" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="GET /allgames from one page" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.gamesTestSecond]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set queryParams season" doc:id="124fd654-30b5-4094-935b-18dca77c136c">
				<munit:attributes value='#["queryParams":{"season": 2016}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to allgames" doc:id="957bfdbe-27b6-4838-8bb7-ba4d712e9e5e" name="allgames"/>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="gamesTestResult  var" doc:id="76054ed4-0ce1-4460-b52b-d013ed137b50">
				<ee:message />
				<ee:variables>
					<ee:set-variable variableName="gamesTestResult" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://results/gamestest.json", "application/json")     ]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="gamesTestResult equalTo payload" doc:id="3bdd17b3-4733-4e27-82be-483feba100f5" is="#[MunitTools::equalTo(vars.gamesTestResult)]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="new-test-suite-gamesbyteamabrTest" doc:id="6dd34106-c27f-4de7-9ccb-7b91cd6e148f" description="Test">
		<munit:behavior >
			<ee:transform doc:name="allGamesTest var" doc:id="30897756-ebc4-4112-a76a-5bb4e9001c94" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="allGamesTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allgames.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allgames" doc:id="760d23e4-07f2-4aae-b73f-630ac0616e0f" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="allgames" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="99d11d63-0125-4f23-8aa6-d02f99a1f06e" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allgames" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.allGamesTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set queryParams abbreviation" doc:id="f07b8b2a-6365-4263-8629-c449d5a403b8">
				<munit:attributes value='#["queryParams":{"abbreviation":"GSW"}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to getGames" doc:id="7ccebeb2-a31e-47f6-977e-e396ab80498a" name="getGames" />
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="gamesByTeamAbrTestResult var" doc:id="58c68c4d-107e-47a6-8d88-d84b8e35c156" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="gamesByTeamAbrTestResult" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://results/gamesbyteamabrtest.json", "application/json")  ]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="gamesByTeamAbrTestResult equalTo payload" doc:id="042ff08f-8459-46b2-9448-4dba50f4c9d8" is="#[MunitTools::equalTo(vars.gamesByTeamAbrTestResult)]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="new-test-suite-gamesbynameTest" doc:id="bed65245-2b06-4e3b-bd2b-77aeb0e9d65a" description="Test">
		<munit:behavior >
			<ee:transform doc:name="allGamesTest var" doc:id="eb73fb20-73b2-41b4-8036-09acb8ed0089" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="allGamesTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allgames.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allgames" doc:id="288aa55c-e8be-4da7-b021-ea870533518d" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="allgames" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="99e2fd7a-c6ef-407a-a6bf-86b25032a62f" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allgames" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[vars.allGamesTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<munit:set-event doc:name="Set queryParams  teamname" doc:id="785ef3fc-4b07-4432-a304-82efd1eab263" >
				<munit:attributes value='#["queryParams":{"teamname":"Warriors"}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to getGames" doc:id="a7a3078b-c2d6-4591-be9c-e8e40ac06885" name="getGames" />
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="gamesByNameTestResult var" doc:id="477678e7-eb67-45d6-bdd1-37e7d9a61bf7" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="gamesByNameTestResult" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://results/gamesbynametest.json", "application/json")  ]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="gamesByNameTestResult equalTo payload" doc:id="9b3b77fe-b82a-4e30-91e4-dae3254fe1ff" expression="#[payload]" is="#[MunitTools::equalTo(vars.gamesByNameTestResult)]" />
		</munit:validation>
	</munit:test>
	<munit:test name="new-test-suite-getGamesTest" doc:id="8586022f-5828-4f55-a37d-56848a53acc4" description="Test">
		<munit:behavior >
			<ee:transform doc:name="allGamesTest var" doc:id="a47e3649-5dc3-4330-9b7d-e4b12b8791ce" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="allGamesTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allgames.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allgames" doc:id="353ce116-0a51-43b2-9fa8-e7bc0274874f" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="allgames" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="e0af97a3-a733-47b6-aa16-d97c9eceba53" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allgames" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[vars.allGamesTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to getGames" doc:id="a0c67da3-e64a-408d-8969-294f9f6b99b6" name="getGames" />
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="allGamesTestResult var" doc:id="2e39292d-3bba-47fa-8503-7f649e26746f" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="allGamesTestResult" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://results/allgamestest.json", "application/json")  ]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="allGamesTestResult equalTo payload" doc:id="62ccbb6b-e39f-4ebd-a4ae-54b6810f019f" expression="#[payload]" is="#[MunitTools::equalTo(vars.allGamesTestResult)]" />
		</munit:validation>
	</munit:test>
	<munit:test name="new-test-suite-findWinnersOfTheGameTest" doc:id="f41bb422-c1fd-488f-b23c-8de03a93bb66" description="Test">
		<munit:behavior >
			<ee:transform doc:name="allGamesTest var" doc:id="ec18cd49-4d8a-4fc4-bde1-e494653a3227" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="allGamesTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allgames.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allgames" doc:id="b440e0fd-8923-45b4-866c-eb8bf3709eab" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="allgames" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="7fd08f48-fbbe-4c9c-bbff-6db282f5337c" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allgames" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[vars.allGamesTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to findWinnersOfTheGame" doc:id="565588e1-fdf1-4823-bf16-d566ffa7ae54" name="findWinnersOfTheGame"/>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="winnersTestResult var" doc:id="c4492320-ce2e-4c63-98f9-76c91a4029be" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="winnersTestResult" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://results/winnerstest.json", "application/json") ]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="winnersTestResult equalTo payload" doc:id="d87bca64-a7ec-48b4-b518-fa83ba98f399" expression="#[payload]" is="#[MunitTools::equalTo(vars.winnersTestResult)]" />
		</munit:validation>
	</munit:test>
	<munit:test name="new-test-suite-addAdditionalInfoTest" doc:id="9ef60946-6385-42bd-aab1-94f41808cab1" description="Test">
		<munit:behavior >
			<ee:transform doc:name="allTeamsTest var" doc:id="446f9a2e-29cc-412a-917e-594ef38e779f" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="allTeamsTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allteamsarray.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allteams" doc:id="4b5f13a8-1234-4319-8cdd-941c802c4df6" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="allteams" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d81cce55-a8bd-4c0d-9e36-0ac3bdf1c6b0" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allteams" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.allTeamsTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<ee:transform doc:name="allGamesTest var" doc:id="f1c891f0-2100-49f0-8eb7-29b5bba7ed43">
				<ee:message />
				<ee:variables>
					<ee:set-variable variableName="allGamesTest"><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allgames.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allgames" doc:id="0aee26ea-adbf-4eb6-a938-9775b0516485" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="allgames" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="7fd08f48-fbbe-4c9c-bbff-6db282f5337c" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allgames" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.allGamesTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to addAdditionalInfo" doc:id="df2e09ae-0d17-4710-b89d-8b1f1ab1ded3" name="addAdditionalInfo"/>
		</munit:execution>
		<munit:validation>
			<ee:transform doc:name="addInfoResultTest var" doc:id="73a1d006-a687-48f1-9786-38279b15773f" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="addInfoResulttest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://results/addinfotest.json", "application/json") ]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="addInfoResultTest equalTo payload" doc:id="d59b6c42-ef5b-4206-aa4f-9536485df3db" expression="#[payload]" is="#[MunitTools::equalTo(vars.addInfoResultTest)]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="new-test-suite-getStandingsTest" doc:id="c19bbbd8-854b-4139-8993-fe7d46b1faf0" description="Test">
		<munit:behavior >
			<ee:transform doc:name="allTeamsTest var" doc:id="5fcba404-868a-4bea-bd72-21f0bc1f50e5" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="allTeamsTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allteamsarray.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allteams" doc:id="3d571eb9-8933-4f21-bb1e-0fad2706b279" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="allteams" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d81cce55-a8bd-4c0d-9e36-0ac3bdf1c6b0" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allteams" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.allTeamsTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<ee:transform doc:name="allGamesTest var" doc:id="967e1653-3d21-4cd7-9a72-5f721bda008d" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="allGamesTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allgames.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allgames" doc:id="17c0b8c3-29ea-4b28-8c14-a25d0c652154" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="allgames" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="7fd08f48-fbbe-4c9c-bbff-6db282f5337c" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allgames" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.allGamesTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<flow-ref doc:name="MockDBConection" doc:id="810489f5-89b4-4b40-9df0-4fc45b7a6b7d" name="MockDBConection"/>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set variable season" doc:id="b8daaefb-c469-4345-8bec-a279f6bddea6" >
				<munit:variables >
					<munit:variable key="season" value="2018" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to getStandings" doc:id="30ed7d0f-f6d7-4a25-87be-301983ee4588" name="getStandings"/>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="getStandingsTestResult var" doc:id="cdfcce8a-a1ef-4e59-8d29-fc3cb732dab2" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="getStandingsTestResult" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://results/getstandingstest.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="getStandingsTestResult equalTo payload" doc:id="eea945e9-92ad-43fc-9261-ff71164f431d" is="#[MunitTools::equalTo(vars.getStandingsTestResult)]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="new-test-suite-standingsByConferenceTest" doc:id="95bb9ab5-de7f-48be-8b7c-673a6d104d4f" description="Test">
		<munit:behavior >
			<ee:transform doc:name="allGamesTest var" doc:id="35f1e2b0-abbe-44e9-a755-29b3db523794">
				<ee:message />
				<ee:variables>
					<ee:set-variable variableName="allGamesTest"><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allgames.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allgames" doc:id="5be4577a-7d8f-4975-b0b7-106a3a5f835a" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="allgames" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="7fd08f48-fbbe-4c9c-bbff-6db282f5337c" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allgames" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[vars.allGamesTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<ee:transform doc:name="allTeamsTest var" doc:id="2f1668b6-f5a8-40b8-90e0-b20b205d71a1" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="allTeamsTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allteamsarray.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allteams" doc:id="6cda889d-9e9f-4946-8a61-d69250b61c49" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="allteams" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d81cce55-a8bd-4c0d-9e36-0ac3bdf1c6b0" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allteams" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.allTeamsTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<flow-ref doc:name="MockDBConection" doc:id="08a048e8-bc0c-4332-a179-29da3a0a6f9b" name="MockDBConection" />
		</munit:behavior>
		<munit:execution>
			<munit:set-event doc:name="Set queryParams  standingby an variable season" doc:id="8eb5354d-9993-4955-8651-2f311e6000ae">
				<munit:attributes value='#["queryParams":{"standingsby":"conference"}]' />
				<munit:variables >
					<munit:variable key="season" value="2018" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to getStandings" doc:id="5ec63b45-ab8e-4096-b3cc-436796f2546f" name="getStandings" />
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="getStandingsTestResult var" doc:id="d5083b72-a925-484d-937c-859b0701f19d" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="getStandingsTestResult" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://results/getstandingsbyconftest.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="getStandingsTestResult equalTo payload" doc:id="4f76ab71-fb3b-4f3e-b4aa-08f8e88dbab9" expression="#[payload]" is="#[MunitTools::equalTo(vars.getStandingsTestResult)]" />
		</munit:validation>
	</munit:test>
	<munit:test name="new-test-suite-standingsByDivisionTest" doc:id="683bafc3-8c0f-4e2f-8132-8eae781688f2" description="Test">
		<munit:behavior >
			<ee:transform doc:name="allGamesTest var" doc:id="414582b3-e265-4ded-a204-b2d78d1698b1" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="allGamesTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allgames.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allgames" doc:id="4efb5603-4e8d-4ffa-bbd5-22dbc89c1337" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="allgames" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="7fd08f48-fbbe-4c9c-bbff-6db282f5337c" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allgames" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.allGamesTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<ee:transform doc:name="allTeamsTest var" doc:id="29a00d9b-1c0b-4167-a574-bb3692d1b706" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="allTeamsTest" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://mock/allteamsarray.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:mock-when doc:name="flow ref allteams" doc:id="0a5ec1ba-de99-444a-8a76-432343ab9234" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="allteams" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d81cce55-a8bd-4c0d-9e36-0ac3bdf1c6b0" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="allteams" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[vars.allTeamsTest]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<flow-ref doc:name="MockDBConection" doc:id="055c85e5-eaea-4c84-ac41-8b51c70d1f7e" name="MockDBConection" />
		</munit:behavior>
		<munit:execution>
			<munit:set-event doc:name="Set queryParams  standingby an variable season" doc:id="29ab0eb9-8375-4cd9-92de-e6bc7aa056e1" >
				<munit:attributes value='#["queryParams":{"standingsby":"division"}]' />
				<munit:variables >
					<munit:variable key="season" value="2018" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to getStandings" doc:id="5ea2304e-49e9-4069-8e5e-2f05d3a81eb7" name="getStandings" />
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="getStandingsTestResult var" doc:id="b0da499b-17bb-4331-a709-019e510272ba" >
				<ee:message />
				<ee:variables >
					<ee:set-variable variableName="getStandingsTestResult" ><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://results/getstandingsbydivtest.json", "application/json")]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="getStandingsTestResult equalTo payload" doc:id="d82d0d45-db2f-4ded-b172-f3a2ec9759cb" expression="#[payload]" is="#[MunitTools::equalTo(vars.getStandingsTestResult)]" />
		</munit:validation>
	</munit:test>
	<sub-flow name="MockDBConection" doc:id="82249609-8f8b-4491-9cc5-64d3dd160e51" >
		<munit-tools:mock-when doc:name="Mock DB Creation" doc:id="c1ac1d0f-03b4-4dc5-9ad8-af3bab7c48d9" processor="db:execute-ddl" >
			<munit-tools:with-attributes >
				<munit-tools:with-attribute whereValue="Create Table" attributeName="doc:name" />
				<munit-tools:with-attribute whereValue="60fd7ab1-8800-4243-b0d9-c395fc3d31c0" attributeName="doc:id" />
				<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
			</munit-tools:with-attributes>
			<munit-tools:then-return >
				<munit-tools:payload value="#[payload]" />
			</munit-tools:then-return>
		</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Mock DB Clearing" doc:id="567499bc-b0d2-42d6-8d82-378a9e2289b3" processor="db:insert" >
			<munit-tools:with-attributes >
				<munit-tools:with-attribute whereValue="Insert into Table" attributeName="doc:name" />
				<munit-tools:with-attribute whereValue="2c61cae1-5913-4979-b6d3-87a733a8a163" attributeName="doc:id" />
				<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
			</munit-tools:with-attributes>
			<munit-tools:then-return >
				<munit-tools:payload value="#[payload]" />
			</munit-tools:then-return>
		</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Mock DB Insertion" doc:id="5ec6e01a-9e52-40e7-ba5f-8aa0fc37b92d" processor="db:delete" >
			<munit-tools:with-attributes >
				<munit-tools:with-attribute whereValue="Delete All Data From Table" attributeName="doc:name" />
				<munit-tools:with-attribute whereValue="3f58fdc0-adfb-4a98-9669-a0db7c7967c2" attributeName="doc:id" />
				<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
			</munit-tools:with-attributes>
			<munit-tools:then-return >
				<munit-tools:payload value="#[payload]" />
			</munit-tools:then-return>
		</munit-tools:mock-when>
	</sub-flow>


</mule>
