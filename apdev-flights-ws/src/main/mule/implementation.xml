<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="f76cfe06-1c1f-4a82-92e0-74a133c4b500" >
		<set-variable value="#[message.attributes.queryParams.airline]" doc:name="airline" doc:id="7951bea5-238c-44e1-9b59-3a0aa79c7c69" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="d4d39035-046e-4c0a-aa58-e408637a304f" name="setCode"/>
		<validation:is-true doc:name="Is valid destination" doc:id="86f9d30a-be19-4868-bfb2-2687899e8e56" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code ]" message="#['Invalid destination' ++ ' ' ++ (vars.code default' ')]">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:INVALID_DESTINATION" />
		</validation:is-true>
		<choice doc:name="Choice" doc:id="36ce6a8f-56b5-4a6b-9dce-81a662a94e1f" >
			<when expression='#[vars.airline == "american"]'>
				<flow-ref doc:name="getAmericanFlights" doc:id="2b0f9470-8f89-4340-baba-1ba0062fb0ab" name="getAmericanFlights"/>
			</when>
			<when expression='#[vars.airline == "united"]'>
				<flow-ref doc:name="getUnitedFlights" doc:id="28a64c1c-423e-418f-9575-f995833b4c1a" name="getUnitedFlights"/>
			</when>
			<when expression='#[vars.airline == "delta"]'>
				<flow-ref doc:name="getDeltaFlights" doc:id="ad887d91-bfa3-4eeb-b33e-6452f9156c77" name="getDeltaFlights"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="a8824fca-7a9a-4231-80c2-306bd6a9336f" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="3a63ff70-b6fd-4058-ab65-f200eb1e9863" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2fe4b4ed-c136-4da2-863d-bd0bc6117368" />
	</flow>
	<flow name="getAllAirlineFlights" doc:id="12561bbf-3749-4be0-9946-e4e797a84ae2" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="0bff2151-aecd-4e11-a8dc-96b62c154be8" >
			<route >
				<try doc:name="Try" doc:id="69da88d0-229e-415a-9045-fc3c49b491ad" >
					<flow-ref doc:name="getAmericanFlights" doc:id="da62ab66-4da3-443a-9898-c16358aadce6" name="getAmericanFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="0bd0b3f2-6665-4c12-9c68-760cd25b7549" type="ANY">
							<ee:transform doc:name="[]" doc:id="857c1af4-4e05-4028-8841-24d5982bbcee" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="be2f3a6d-1a82-4fe9-8859-c31fb15b149f" >
					<flow-ref doc:name="getUnitedFlights" doc:id="3ae7eec3-7ec6-4ec9-937e-f826c3b6304b" name="getUnitedFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="f966efde-3acf-4b04-bfd5-572a8299e525" type="ANY">
							<ee:transform doc:name="[]" doc:id="3bb4e91e-90d9-4c34-ae3e-f8a58d9dedb2" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="8221f153-3d36-4775-a8bb-24d6f09d3c88" >
					<flow-ref doc:name="getDeltaFlights" doc:id="a8d21d9c-21bb-46e2-b555-858e9bc55484" name="getDeltaFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="ee4537ec-f9f8-40dc-80be-d44b178ebfdf" type="ANY">
							<ee:transform doc:name="[]" doc:id="1e453ad8-4412-4b59-ab4e-5d9d061b886f" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flatten to [Flight]" doc:id="c3904af1-b534-4b2e-8ebd-53ce7138c0c4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="3af062aa-fc37-4ff8-95d2-90f1892c9259" />
	</flow>
	<sub-flow name="setCode" doc:id="5e9dcf05-1ef0-4ae3-a6fb-b096ccdf605b" >
		<set-variable value="#[message.attributes.queryParams.code]" doc:name="code" doc:id="fdc3f332-2600-4f1c-878b-d8571c75bfa8" variableName="code"/>
	</sub-flow>
	<flow name="getAmericanFlights" doc:id="1b5b1338-70ee-4757-82e9-5635774854d0" >
		<american-flights-api:get-flights doc:name="Get flights" doc:id="db6cfc7d-e7bb-450e-bcdd-56fbc92bcf7c" config-ref="American_Flights_API_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [Flight]" doc:id="b0e1c106-b3a5-4ce3-9dbc-8e64187a2d39" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="On Error Continue" doc:id="33503901-be32-434b-84cd-c648c3ef8eaf" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue." doc:id="c3ddabaa-cdb3-4b76-93ad-e5b7c333817e" type="AMERICAN-FLIGHTS-API:BAD_REQUEST" >
				<ee:transform doc:name="No flights" doc:id="70bb96ee-8848-4302-a320-6dfa9f0a8dcd" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No flights to " ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="cbef69fd-d096-4ce3-8ad9-ce294ab713e0" variableName=" httpStatus" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getUnitedFlights" doc:id="a3f384c3-eb82-4399-afdf-89b2160ee02f" >
		<http:request method="GET" doc:name="Get flights" doc:id="74e26b9a-4400-44bd-937c-32b615d16d20" config-ref="HTTP_Request_training" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flight]" doc:id="dd97fb0f-1448-4196-a57d-c6fb6395284a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="322df35f-cfec-4ebe-a788-6b8217b7d9ae" />
	</flow>
	<flow name="getDeltaFlights" doc:id="98f44826-1596-41b2-b461-242b2e161b9c" >
		<ee:transform doc:name="Pass code" doc:id="d781b518-42cb-4bdc-9b46-dbecad35587c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="Get flights" doc:id="223b52e4-4a0a-4290-af39-668381085fa1" config-ref="Delta_Web_Service_Consumer_Config"/>
		<ee:transform doc:name="SOAP to o [Flight]" doc:id="d353aefa-1829-4385-aa10-4ff3fb62c303" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="5c9dc327-6111-4427-b5d5-72dd32eff1e5" />
	</flow>
</mule>
